plugins {
    id "java"
    id "idea"
    id "application"
    id "com.palantir.docker" version "0.25.0"
    id "org.springframework.boot" version "2.3.3.RELEASE"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

// Camunda Spring Boot version compatability
// https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/version-compatibility/

group "ch.umb.solutions.consulting"
version "1.0.0"

application {
    mainClassName = "ch.umb.solutions.consulting.camundaspringbootquickstarter.ProcessApp"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

bootJar {
    manifest {
        attributes "Implementation-Version": "${project.version}"
    }
}

ext {
    camundaVersionCE = "7.13.0"
    camundaVersionEE = "7.13.4-ee"
}

repositories {
    // only required for Camunda EE
    maven {
        url "https://app.camunda.com/nexus/repository/camunda-bpm-ee/"
        credentials {
            username CamundaNexusUser
            password CamundaNexusPassword
        }
    }
    mavenCentral()
}

dependencyManagement {
    imports {
        // use ${camundaVersionEE} for Camunda EE or ${camundaVersionCE} for Camunda CE version
        mavenBom "org.camunda.bpm:camunda-bom:${camundaVersionEE}"
    }
}

dependencies {
    // Camunda EE
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp-ee:${camundaVersionEE}"
    // Camunda CE
    // implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:${camundaVersionCE}"

    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:${camundaVersionCE}"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-security"

    // either enable h2 or postgres
    implementation "com.h2database:h2"
    implementation "org.postgresql:postgresql"

    // Java 11 missing modules
    implementation "javax.activation:javax.activation-api:1.2.0"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.3"
    
    testImplementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-test:${camundaVersionCE}"
    testImplementation "org.camunda.bpm.extension:camunda-bpm-assert-scenario:1.0.0"
    testImplementation "org.camunda.bpm.extension:camunda-bpm-process-test-coverage:0.3.2"
    
    // for development only, exclude from production build
    compileOnly "org.springframework.boot:spring-boot-devtools"
}

docker {
    name "${project.group}/${rootProject.name}:${version}"
    dockerfile file("docker/Dockerfile")
    files jar.archiveFile
    buildArgs([JAR_NAME: "${jar.archiveFileName}"])
}

clean {
    delete 'target'
}